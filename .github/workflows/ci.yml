name: ci

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt
      - name: Run fmt
        run: cargo fmt --all -- --check

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        std:
          - std

        features:
          - spec
          - subiot
          - wizzilab

    steps:
      - uses: actions/checkout@v4
      - name: Install system dependencies
        run: sudo apt-get install -y libudev-dev
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: 'llvm-tools-preview'
      - uses: taiki-e/install-action@main
        with:
          tool: grcov
      - name: Build
        run: cargo build --no-default-features -F ${{ matrix.std }} -F ${{ matrix.features }} --verbose
      - name: Run tests
        run: cargo test --no-default-features -F ${{ matrix.std }} -F ${{ matrix.features }} --verbose
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: -Cinstrument-coverage
          RUSTDOCFLAGS: -Cinstrument-coverage
          LLVM_PROFILE_FILE: dash7-%p-%m.profraw
      - name: Produce coverage info
        run: |
          grcov $(find . -name "dash7-*.profraw" -print) \
            -s . \
            --branch \
            --ignore-not-existing \
            --ignore='target/*' \
            --ignore='/*' \
            --binary-path ./target/debug/ \
            --excl-line='#\[derive' \
            -t lcov \
            -o lcov.info
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v5
        with:
          flags: "${{ matrix.features }}"
          files: lcov.info
          fail_ci_if_error: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

